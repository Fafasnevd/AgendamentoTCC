{"version":3,"sources":["fake-data/schedule-configs.js","pages/choose-date/choose-date.js"],"names":["week","specificDate","PaperContainer","styled","Paper","theme","spacing","TimeTable","div","ChooseDate","location","currentDate","Date","useShoppingCart","addScheduleToShoppingCart","schedules","state","procedure","professional","useState","selectedDate","setSelectedDate","disabledDays","scheduleConfigs","isPastTime","timeString","isToday","split","hour","minute","date","setHours","useEffect","window","horas","DateFnsUtils","datefns","dateFns","console","log","addSchedule","time","_","selectedTime","Grid","container","justify","item","xs","sm","md","alignItems","direction","utils","locale","brLocale","DatePicker","id","inputVariant","format","disablePast","value","shouldDisableDate","day","getDay","dateString","lightFormat","includes","onChange","cancelLabel","color","currentWeekDay","toLocaleDateString","time_table","timeTable","hasOwnProperty","getTimeTable","map","Box","p","onClick","to","pathname","CHECKOUT","disabled","variant"],"mappings":"4UAAe,EAgBC,CACZA,KAAM,CAAC,EAAG,GACVC,aAAc,CAAC,aAAc,e,eCiH3BC,EAAiBC,YAAOC,IAAPD,CAAH,wEACD,qBAAGE,MAAkBC,QAAQ,MACnC,qBAAGD,MAAkBC,QAAQ,MAGpCC,EAAYJ,IAAOK,IAAV,iJAKC,qBAAGH,MAAkBC,QAAQ,MAG9BG,EAvHI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACdC,EAAc,IAAIC,KADW,EAGcC,cAA9BC,GAHgB,EAG3BC,UAH2B,EAGhBD,2BAHgB,EAKCJ,EAASM,MAArCC,EAL2B,EAK3BA,UAAWC,EALgB,EAKhBA,aALgB,EAMKC,mBAASR,GANd,mBAM5BS,EAN4B,KAMdC,EANc,KAOhBC,EAAiBC,EAkBpC,SAASC,EAAYC,GACnB,GAAIC,YAAQN,GAAe,CAAC,IAAD,EACJK,EAAWE,MAAM,KADb,mBACpBC,EADoB,KACdC,EADc,KAErBC,EAAO,IAAIlB,KAEf,OADAkB,EAAKC,SAASH,EAAMC,EAAQ,EAAG,GACxBlB,EAAcmB,EAEvB,OAAO,EApBTE,qBAAU,WACRC,OAAOC,MAAQC,IACfF,OAAOG,QAAUC,EACjBC,QAAQC,IAAI,OAAQrB,KACnB,IA6BH,IAAMsB,EAAc,SAACC,GAAD,OAAU,SAACC,GAC7B5B,EAA0B,CACxBG,YACAC,eACAE,eACAuB,aAAcF,MAIlB,OACE,cAAC,IAAD,UACE,cAACG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACE,eAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAA/B,UACE,cAAC,IAAD,4BAEA,cAAChD,EAAD,UACE,eAAC0C,EAAA,EAAD,CAAMC,WAAS,EAACM,WAAW,SAASC,UAAU,SAA9C,UACE,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,IAAD,CACEK,MAAOlB,IACPmB,OAAQC,IAFV,SAGE,cAACC,EAAA,EAAD,CACEC,GAAG,qBACHC,aAAa,WACbC,OAAO,aACPC,aAAW,EACXC,MAAOzC,EACP0C,kBAtDlB,SAAqBhC,GACnB,IAAMiC,EAAMjC,EAAKkC,SACXC,EAAaC,YAAYpC,EAAM,cACrC,OAAOR,EAAatB,KAAKmE,SAASJ,IAC7BzC,EAAarB,aAAakE,SAASF,IAmDxBG,SAjEO,SAACtC,GACxBT,EAAgBS,IAiEAuC,YAAY,WACZC,MAAM,kBAGZ,cAAC,IAAD,IACA,eAAC1B,EAAA,EAAD,CAAMG,MAAI,EAAV,UACE,cAAC,IAAD,0BACA,cAACxC,EAAD,UA9Cd,WACE,IAAMgE,EAAiBnD,EAAa4C,SAC9BC,EAAa7C,EAAaoD,qBAC1BC,EAAavD,EAAawD,UAChC,OAAID,EAAWxE,aAAa0E,eAAeV,GAClCQ,EAAWxE,aAAagE,GAE1BQ,EAAWzE,KAAKuE,GAwCRK,GAAeC,KAAI,SAACpC,GAAD,OAClB,cAACqC,EAAA,EAAD,CAAKC,EAAG,EAAR,SACE,cAAC,IAAD,CACAC,QAASxC,EAAYC,GACrBwC,GAAI,CACFC,SAAUC,KAEZC,SAAU5D,EAAWiB,GACrB4C,QAAQ,WACRf,MAAM,YAPN,SAQG7B,KATWA","file":"static/js/34.9438cbb5.chunk.js","sourcesContent":["export default {\r\n  timeTable: {\r\n    week: {\r\n      0: ['7:30', '8:00', '8:30', '9:00', '9:30'],\r\n      1: ['8:30', '9:00', '10:30', '11:00', '11:30'],\r\n      2: ['9:30', '10:00', '10:30', '11:00', '11:30'],\r\n      3: ['10:30', '11:00', '11:30', '12:00', '12:30'],\r\n      4: ['12:30', '13:00', '13:30', '14:00', '14:30',\r\n        '15:30', '15:00', '16:00', '16:30', '17:00', '17:30'],\r\n      5: ['14:30', '15:00', '15:30', '16:00', '16:30'],\r\n      6: ['15:30', '16:00', '16:30', '17:00', '17:30']\r\n    },\r\n    specificDate: {\r\n      '08/01/2021': ['16:30', '17:00', '17:30', '18:00', '18:30']\r\n    }\r\n  },\r\n  disabledDays: {\r\n    week: [0, 6],\r\n    specificDate: ['19/01/2021', '14/01/2021']\r\n  }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Paper\r\n} from '@material-ui/core'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport { isToday, lightFormat } from 'date-fns'\r\nimport * as dateFns from 'date-fns'\r\nimport brLocale from 'date-fns/locale/pt-BR'\r\nimport {\r\n  DatePicker,\r\n  MuiPickersUtilsProvider\r\n} from '@material-ui/pickers'\r\nimport {\r\n  Button,\r\n  Content,\r\n  Divider,\r\n  H4, H6\r\n} from 'ui'\r\nimport { CHECKOUT } from 'routes'\r\nimport scheduleConfigs from 'fake-data/schedule-configs'\r\nimport { useShoppingCart } from 'hooks'\r\nimport {v4} from 'uuid'\r\nconst ChooseDate = ({ location }) => {\r\n  const currentDate = new Date()\r\n\r\n  const { schedules, addScheduleToShoppingCart } = useShoppingCart()\r\n\r\n  const { procedure, professional } = location.state\r\n  const [selectedDate, setSelectedDate] = useState(currentDate)\r\n  const { timeTable, disabledDays } = scheduleConfigs\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.horas = DateFnsUtils\r\n    window.datefns = dateFns\r\n    console.log(\"time\", professional);\r\n  }, [])\r\n\r\n  function disableDay (date) {\r\n    const day = date.getDay()\r\n    const dateString = lightFormat(date, \"dd/MM/yyyy\")\r\n    return disabledDays.week.includes(day)\r\n      || disabledDays.specificDate.includes(dateString)\r\n  }\r\n  \r\n  function isPastTime (timeString) {\r\n    if (isToday(selectedDate)) {\r\n      let [hour, minute] = timeString.split(':')\r\n      let date = new Date()\r\n      date.setHours(hour, minute, 0, 0)\r\n      return currentDate > date\r\n    }\r\n    return false\r\n  }\r\n\r\n  function getTimeTable () {\r\n    const currentWeekDay = selectedDate.getDay()\r\n    const dateString = selectedDate.toLocaleDateString()\r\n    const time_table = professional.timeTable \r\n    if (time_table.specificDate.hasOwnProperty(dateString)) {\r\n      return time_table.specificDate[dateString]\r\n    }\r\n    return time_table.week[currentWeekDay]\r\n  }\r\n\r\n  const addSchedule = (time) => (_) => {\r\n    addScheduleToShoppingCart({\r\n      procedure,\r\n      professional,\r\n      selectedDate,\r\n      selectedTime: time\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Content>\r\n      <Grid container justify='center'>\r\n        <Grid item xs={12} sm={10} md={8} >\r\n          <H4>Escolher data</H4>\r\n\r\n          <PaperContainer>\r\n            <Grid container alignItems='center' direction='column'>\r\n              <Grid item xs={6}>\r\n                <MuiPickersUtilsProvider\r\n                  utils={DateFnsUtils}\r\n                  locale={brLocale}>\r\n                  <DatePicker\r\n                    id=\"date-picker-dialog\"\r\n                    inputVariant='outlined'\r\n                    format=\"dd/MM/yyyy\"\r\n                    disablePast\r\n                    value={selectedDate}\r\n                    shouldDisableDate={disableDay}\r\n                    onChange={handleDateChange}\r\n                    cancelLabel='Cancelar'\r\n                    color='secondary'/>\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n              <Divider />\r\n              <Grid item>\r\n                <H6>Hor√°rios</H6>\r\n                <TimeTable>\r\n                  {getTimeTable().map((time) => (\r\n                    <Box p={2} key={time}>\r\n                      <Button \r\n                      onClick={addSchedule(time)}\r\n                      to={{\r\n                        pathname: CHECKOUT,\r\n                      }}\r\n                      disabled={isPastTime(time)} \r\n                      variant='outlined' \r\n                      color='secondary'>\r\n                        {time}\r\n                      </Button>\r\n                    </Box>\r\n                  ))}\r\n                </TimeTable>\r\n              </Grid>\r\n            </Grid>\r\n          </PaperContainer>\r\n        </Grid>\r\n      </Grid>\r\n    </Content>\r\n  )\r\n}\r\n\r\nconst PaperContainer = styled(Paper)`\r\n  margin-bottom: ${({ theme }) => theme.spacing(5)}px;\r\n  padding: ${({ theme }) => theme.spacing(2)}px;\r\n`\r\n\r\nconst TimeTable = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  max-width: 400px;\r\n  justify-content: space-between ;\r\n  margin-top: ${({ theme }) => theme.spacing(3)}px;\r\n`\r\n\r\nexport default ChooseDate"],"sourceRoot":""}