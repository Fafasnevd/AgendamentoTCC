{"version":3,"sources":["utils/to-money.js","utils/percentage.js","../node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","pages/choose-professional/choose-professional.js"],"names":["toMoney","value","Intl","NumberFormat","style","currency","format","getPercentage","percentual","ListItemSecondaryAction","React","props","ref","classes","className","other","_objectWithoutProperties","_extends","clsx","root","muiName","withStyles","position","right","top","transform","name","ListItemText","children","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primary","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","dense","ListContext","type","Typography","variant","component","display","color","multiline","flex","minWidth","marginTop","marginBottom","paddingLeft","ListItemAvatar","context","alignItems","alignItemsFlexStart","flexShrink","createSvgIcon","d","Avatar","alt","childrenProp","_props$component","Component","imgProps","sizes","src","srcSet","_props$variant","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","system","colorDefault","theme","justifyContent","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","palette","background","default","backgroundColor","grey","circle","circular","rounded","shape","square","textAlign","objectFit","textIndent","ProfessionalsContainer","styled","main","spacing","Grid","MaterialGrid","attrs","container","xs","sm","List","MaterialList","ChooseProfessional","location","useState","professionals","setProfessionals","procedure","state","useDatabase","fetchedProfessionals","fetchProfessionals","useEffect","professionalsKeys","Object","keys","price","undefined","result","map","professionalID","id","console","log","professional","ListItem","photo","to","pathname","CHOOSE_DATE"],"mappings":"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","file":"static/js/19.5641fd6f.chunk.js","sourcesContent":["function toMoney (value) {\r\n  return new Intl.NumberFormat('pt-BR', {\r\n    style: 'currency',\r\n    currency: 'BRL'\r\n  }).format(value)\r\n  // return Number(value).toLocaleString('pt-br', {\r\n  //   style: 'currency',\r\n  //   currency: 'BRL'\r\n  // })\r\n}\r\n\r\nexport default toMoney\r\n"," function getPercentage (value, percentual = 30){\r\n  return percentual / 100 * value\r\n}\r\n\r\nexport default getPercentage","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = /*#__PURE__*/React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"circular\"`. */\n    circular: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: chainPropTypes(PropTypes.object, function (props) {\n    var classes = props.classes;\n\n    if (classes == null) {\n      return null;\n    }\n\n    if (classes.circle != null && // 2 classnames? one from withStyles the other must be custom\n    classes.circle.split(' ').length > 1) {\n      throw new Error(\"Material-UI: The `circle` class was deprecated. Use `circular` instead.\");\n    }\n\n    return null;\n  }),\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['circle', 'circular', 'rounded', 'square']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'circle') {\n      throw new Error('Material-UI: `variant=\"circle\"` was deprecated. Use `variant=\"circular\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Avatar,\r\n  List as MaterialList,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  ListItemSecondaryAction,\r\n  Grid as MaterialGrid,\r\n} from '@material-ui/core'\r\nimport { toMoney } from 'utils/index'\r\nimport {\r\n  Button, \r\n  H4, H6,\r\n } from 'ui'\r\nimport { CHOOSE_DATE } from 'routes'\r\nimport { useDatabase } from 'hooks'\r\nconst ChooseProfessional = ({ location }) => {\r\n  const [professionals, setProfessionals] = useState(() => [])\r\n  const { procedure } = location.state\r\n\r\n  const { professionals: fetchedProfessionals, fetchProfessionals } = useDatabase()\r\n\r\n  useEffect(() => {\r\n    fetchProfessionals()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const professionalsKeys = Object.keys(procedure.price)\r\n    if(fetchedProfessionals !== undefined){\r\n      const result = professionalsKeys.map((professionalID) => ({\r\n        id: professionalID,\r\n        ...fetchedProfessionals[professionalID],\r\n        price: procedure.price[professionalID]\r\n      }))\r\n      setProfessionals(result)\r\n    }\r\n    console.log(\"proffisionais\", fetchedProfessionals);\r\n  }, [fetchedProfessionals])\r\n\r\n  return (\r\n    <ProfessionalsContainer>\r\n      <Grid>\r\n        <H4 >{procedure.name}</H4>\r\n        <H6 > Escolha um profissional</H6>\r\n        <List component='nav'>\r\n          {professionals.map((professional) => (\r\n            <ListItem key={professional.id}\r\n              alignItems=\"flex-start\"\r\n            >\r\n              <ListItemAvatar>\r\n                <Avatar alt=\"Remy Sharp\" src={professional.photo} />\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={professional.name}\r\n                secondary={toMoney(professional.price)}\r\n              />\r\n\r\n              <ListItemSecondaryAction>\r\n                <Button\r\n                  to={{\r\n                    pathname: CHOOSE_DATE,\r\n                    state: {\r\n                      procedure,\r\n                      professional\r\n                    }\r\n                  }}\r\n                  variant='outlined'\r\n                  color='primary'>\r\n                  Escolher\r\n                  </Button>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Grid>\r\n    </ProfessionalsContainer>\r\n  )\r\n}\r\n\r\nconst ProfessionalsContainer = styled.main`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${({ theme }) => theme.spacing(3)}px;\r\n`\r\n\r\nconst Grid = styled(MaterialGrid).attrs({\r\n  container: true,\r\n  xs: 12,\r\n  sm: 8\r\n})`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`\r\n\r\nconst List = styled(MaterialList)`\r\n  width: 100%;\r\n`\r\n\r\nexport default ChooseProfessional"],"sourceRoot":""}