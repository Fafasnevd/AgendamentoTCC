{"version":3,"sources":["pages/admin/main/drawer.js","pages/admin/main/main.js"],"names":["drawerWidth","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","ListItem","styled","MaterialListItem","attrs","component","Link","ResponsiveDrawer","props","window","classes","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","className","Divider","List","button","to","ListItemIcon","Book","ListItemText","primary","ADMIN_PROCEDURES","ADMIN_PROFESSIONALS","People","ADMIN_SETTINGS","Settings","container","undefined","document","body","CssBaseline","AppBar","position","Toolbar","IconButton","color","aria-label","edge","onClick","Typography","variant","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","children","Dashboard","lazy","Procedures","Professionals","Main","withStyles","main","fallback","CircularProgress","exact","path","ADMIN"],"mappings":"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","file":"static/js/27.41bcaf63.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  AppBar,\r\n  CssBaseline,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  IconButton,\r\n  List,\r\n  ListItem as MaterialListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Typography,\r\n  Toolbar\r\n} from '@material-ui/core'\r\nimport {\r\n  Book as BookIcon,\r\n  Settings as SettingsIcon,\r\n  MenuOpen as MenuIcon,\r\n  People as PeopleIcon,\r\n  List as ListIcon\r\n} from '@material-ui/icons'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { ADMIN_PROCEDURES, ADMIN_PROFESSIONALS, ADMIN_SETTINGS } from 'routes'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction ResponsiveDrawer (props) {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(true);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List>\r\n        <ListItem button to='/admin/'>\r\n          <ListItemIcon><BookIcon /></ListItemIcon>\r\n          <ListItemText primary='Agendamentos' />\r\n        </ListItem>\r\n        <ListItem button to={ADMIN_PROCEDURES}>\r\n          <ListItemIcon><ListIcon /></ListItemIcon>\r\n          <ListItemText primary='Procedimentos' />\r\n        </ListItem>\r\n        <ListItem button to={ADMIN_PROFESSIONALS}>\r\n          <ListItemIcon><PeopleIcon /></ListItemIcon>\r\n          <ListItemText primary='Profissionais' />\r\n        </ListItem>\r\n        <ListItem button to={ADMIN_SETTINGS}>\r\n          <ListItemIcon><SettingsIcon /></ListItemIcon>\r\n          <ListItemText primary='Configurações' />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Painel de controle\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            color='primary'\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {props.children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ListItem = styled(MaterialListItem).attrs({\r\n  component: Link\r\n})``\r\n\r\nResponsiveDrawer.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n","import React, { Suspense } from 'react'\r\nimport {\r\n  withStyles,\r\n  CircularProgress\r\n} from '@material-ui/core'\r\nimport ResponsiveDrawer from 'pages/admin/main/drawer'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { ADMIN, ADMIN_PROFESSIONALS, ADMIN_PROCEDURES, ADMIN_SETTINGS } from 'routes'\r\n\r\n\r\nconst Dashboard = React.lazy(\r\n  () => import('pages/admin/dashboard')\r\n)\r\nconst Procedures = React.lazy(\r\n  () => import('pages/admin/procedures')\r\n)\r\nconst Professionals = React.lazy(\r\n  () => import('pages/admin/professionals')\r\n)\r\nconst Settings = React.lazy(\r\n  () => import('pages/admin/settings')\r\n)\r\n\r\nconst Main = () => {\r\n  return (\r\n    <>\r\n      <ResponsiveDrawer>\r\n        <Suspense fallback={<CircularProgress/>}>\r\n          <Switch>\r\n            <Route exact path={ADMIN} component={Dashboard} />\r\n            <Route path={ADMIN_PROCEDURES} component={Procedures} />\r\n            <Route path={ADMIN_SETTINGS} component={Settings} />\r\n            <Route path={ADMIN_PROFESSIONALS} component={Professionals} />\r\n          </Switch>\r\n        </Suspense>\r\n      </ResponsiveDrawer>\r\n    </>\r\n  )\r\n}\r\n\r\nconst style = (theme) => ({\r\n  main: theme.mixins.toolbar\r\n})\r\n\r\nconst Spacer = withStyles(style)(({ classes }) => (\r\n  <div className={classes.main} />\r\n))\r\n\r\nexport default Main\r\n"],"sourceRoot":""}