{"version":3,"sources":["ui/link-button.js","ui/content.js","ui/card-link.js","ui/divider.js","ui/spacer.js","ui/footer.js","ui/modal.js","ui/snackbar.js","ui/paper-container.js","ui/text-field.js","ui/title.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","../node_modules/@material-ui/icons/esm/Delete.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","../node_modules/@material-ui/icons/esm/Edit.js","pages/admin/professionals/main/main.js"],"names":["Button","styled","MaterialButton","attrs","component","Link","Content","CardActionArea","theme","palette","common","white","spacing","main","Divider","MaterialDivider","Spacer","div","FooterContent","footer","grey","ToolbarContainer","Container","ToolbarItem","NavLink","active","activeStyle","color","primary","IconButton","MaterialIconButton","IconLabel","span","typography","caption","fontFamily","fontWeight","lineHeight","letterSpacing","withRouter","location","appState","useApplication","currentPathName","pathname","useEffect","toolbarItems","map","item","index","itemPathname","isActive","to","HOME","pathStartWith","icon","label","useStyles","makeStyles","appBar","position","title","marginLeft","flex","Transition","React","forwardRef","props","ref","Slide","direction","FullScreenDialog","children","classes","paymentDetails","useShoppingCart","useState","open","setOpen","status","handleClose","variant","onClick","Dialog","fullScreen","onClose","TransitionComponent","AppBar","className","Toolbar","edge","aria-label","Typography","SlideTransition","Snackbar","PaperContainer","Paper","TextField","xs","sm","md","lg","autoFocus","Grid","fullWidth","inputProps","Title","align","gutterBottom","undefined","H4","H5","H6","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","ListItemSecondaryAction","other","_objectWithoutProperties","_extends","clsx","root","muiName","withStyles","right","top","transform","name","ListItemAvatar","context","ListContext","alignItems","alignItemsFlexStart","minWidth","flexShrink","marginTop","createSvgIcon","createElement","d","Avatar","alt","childrenProp","_props$component","Component","imgProps","sizes","src","srcSet","_props$variant","loaded","_ref","_React$useState","setLoaded","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","system","colorDefault","display","justifyContent","width","height","fontSize","pxToRem","borderRadius","overflow","userSelect","background","default","backgroundColor","type","circle","circular","rounded","shape","square","textAlign","objectFit","textIndent","ProfessionalsList","professionals","setProfessionals","useDatabase","fetchedProfessionals","fetchProfessionals","deleteProfessional","selectedProfessional","setSelectedProfessional","console","log","success","message","snackBar","setSnackBar","dialogOpen","setDialogOpen","handleDialogOpen","professional","e","handleDialogClose","keys","key","id","handleDelete","a","result","filter","pro","container","justify","ADMIN_PROFESSIONALS_ADD","length","List","ListItem","toUpperCase","photo","ListItemText","secondary","Delete","ADMIN_PROFESSIONALS_UPDATE","state","Edit","autoHideDuration","Alert","severity","aria-labelledby","aria-describedby","DialogTitle","DialogActions"],"mappings":"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","file":"static/js/16.a5f29399.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport { Button as MaterialButton } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Button = styled(MaterialButton).attrs({\r\n  component: Link\r\n})`\r\n \r\n`\r\nexport default Button\r\n","import styled from 'styled-components'\r\nconst Content = styled.main`\r\n  flex-grow: 1;\r\n  padding: ${({ theme }) => theme.spacing(3)}px;\r\n`\r\nexport default Content\r\n","import styled from 'styled-components'\r\nimport { CardActionArea } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CardLink = styled(CardActionArea).attrs({\r\n  component: Link\r\n})`\r\n  color: ${({ theme }) => theme.palette.common.white};\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 180px;\r\n  min-height: 120px;\r\n  padding: ${({ theme }) => theme.spacing(3, 0)};\r\n`\r\n\r\nexport default CardLink\r\n","import styled from 'styled-components'\r\nimport { Divider as MaterialDivider } from '@material-ui/core'\r\n\r\nconst Divider = styled(MaterialDivider)`\r\n  margin: ${({ theme }) => theme.spacing(3, 0)};\r\n  width: 100%;\r\n`\r\n\r\nexport default Divider\r\n","import styled from 'styled-components'\r\n\r\n\r\nconst Spacer = styled.div`\r\n  margin-top: ${({ theme }) => theme.spacing(2)}px;\r\n  margin-bottom: ${({ theme }) => theme.spacing(2)}px;\r\n  width: 100%;\r\n`\r\n\r\nexport default Spacer\r\n","import React, { useEffect } from 'react'\r\nimport { withRouter, NavLink } from 'react-router-dom'\r\nimport {\r\n  Container,\r\n  IconButton as MaterialIconButton,\r\n} from '@material-ui/core'\r\n\r\nimport styled from 'styled-components'\r\nimport { useApplication } from 'hooks'\r\nimport { HOME } from 'routes'\r\nimport pathStartWith from 'utils/path-comparator'\r\n\r\nfunction Footer ({ location }) {\r\n\r\n  const { appState } = useApplication()\r\n  const currentPathName = location.pathname\r\n\r\n  useEffect(() => {\r\n    // console.log('isActiveItem', isActiveItem('/reservas'))\r\n  })\r\n\r\n  function isActiveItem (itemPathname) {\r\n    if (itemPathname === HOME) {\r\n      return itemPathname === currentPathName\r\n    }\r\n    \r\n    return pathStartWith(itemPathname, currentPathName)\r\n  }\r\n\r\n  return (\r\n    <FooterContent>\r\n      <ToolbarContainer>\r\n        {appState.toolbarItems.map((item, index) => {\r\n          const isActive = isActiveItem(item.to.pathname)\r\n          return (\r\n            <ToolbarItem\r\n              active={isActive}\r\n              to={item.to.pathname}\r\n              key={index}\r\n            >\r\n              <IconButton active={isActive}>\r\n                {item.icon}\r\n              </IconButton>\r\n              <IconLabel>\r\n                {item.label}\r\n              </IconLabel>\r\n            </ToolbarItem>\r\n          )\r\n        })}\r\n      </ToolbarContainer>\r\n    </FooterContent>\r\n  )\r\n}\r\n\r\nconst FooterContent = styled.footer`\r\n  background: ${({ theme }) => theme.palette.common.white};\r\n  bottom: 0;\r\n  left: 0;\r\n  position: fixed;\r\n  width: 100%;\r\n  z-index: 3;\r\n  box-shadow: 0 0 3px ${({ theme }) => theme.palette.grey[400]};\r\n`\r\n\r\nconst ToolbarContainer = styled(Container)`\r\n  display: flex;\r\n  justify-content: space-around;\r\n`\r\n\r\nconst ToolbarItem = styled(NavLink).attrs(({ active, theme }) => ({\r\n  activeStyle: {\r\n    color: active ? theme.palette.primary.main : ''\r\n  }\r\n}))`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  color: ${({ theme }) => theme.palette.grey[800]};\r\n  text-decoration: none;\r\n  text-decoration-color: none;\r\n`\r\n\r\nconst IconButton = styled(MaterialIconButton)`\r\n  padding: 5px;\r\n  span {\r\n      svg{\r\n        path {\r\n          fill: ${({ active, theme }) => active ?\r\n    theme.palette.primary.main : ''};\r\n        }\r\n      }\r\n    };\r\n`\r\nconst IconLabel = styled.span`\r\n  font-family: ${({ theme }) => theme.typography.caption.fontFamily};\r\n  font-weight: ${({ theme }) => theme.typography.caption.fontWeight};\r\n  line-height: ${({ theme }) => theme.typography.caption.lineHeight};\r\n  letter-spacing: ${({ theme }) => theme.typography.caption.letterSpacing};\r\n`\r\n\r\nexport default withRouter(Footer)\r\n","import React, {useEffect} from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Dialog from \"@material-ui/core/Dialog\"\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\nimport Slide from \"@material-ui/core/Slide\"\r\nimport { Content } from \"ui\"\r\nimport { useShoppingCart } from \"hooks\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}))\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />\r\n})\r\n\r\nexport default function FullScreenDialog({ children }) {\r\n  const classes = useStyles()\r\n  const { paymentDetails } = useShoppingCart()\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  useEffect(()=> {\r\n    // console.log(\"MODAL STATUS\", paymentDetails);\r\n    if(paymentDetails.status == 'approved'){\r\n      setOpen(false)\r\n    }\r\n  }, [paymentDetails])\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Concluir agendamento\r\n      </Button>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Fechar\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Content>\r\n          {children}\r\n        </Content>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Snackbar as MaterialSnackbar, Slide } from '@material-ui/core'\r\n\r\nfunction SlideTransition (props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst Snackbar = (props) =>\r\n(\r\n  <MaterialSnackbar {...props}\r\n    TransitionComponent={SlideTransition}>\r\n    {props.children}\r\n  </MaterialSnackbar>\r\n)\r\n\r\nexport default Snackbar","import styled from 'styled-components'\r\nimport { Paper } from '@material-ui/core'\r\n\r\n\r\nconst PaperContainer = styled(Paper)`\r\n  margin-bottom: ${({ theme }) => theme.spacing(5)}px;\r\n  padding: ${({ theme }) => theme.spacing(2)}px;\r\n`\r\n\r\nexport default PaperContainer","import React from 'react'\r\nimport { Grid, TextField as MaterialTextField} from '@material-ui/core';\r\n\r\nfunction TextField ({ xs, sm, md, lg, autoFocus, ...props }) {\r\n  return (\r\n    <Grid item xs={xs} sm={sm} md={md} lg={lg}>\r\n      <MaterialTextField\r\n        fullWidth\r\n        variant='outlined'\r\n        inputProps={{\r\n          autoFocus\r\n        }}\r\n        {...props} />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default TextField","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Typography } from '@material-ui/core'\r\nconst Title = styled(Typography).attrs(({ align }) => ({\r\n  gutterBottom: true, // margin-bottom\r\n  align: align !== undefined ? align : 'center'\r\n}))``\r\nexport const H1 = (props) => <Title variant='h1' {...props} />\r\nexport const H2 = (props) => <Title variant='h2' {...props} />\r\nexport const H3 = (props) => <Title variant='h3' {...props} />\r\nexport const H4 = (props) => <Title variant='h4' {...props} />\r\nexport const H5 = (props) => <Title variant='h5' {...props} />\r\nexport const H6 = (props) => <Title variant='h6' {...props} />\r\n\r\nexport default Title\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = /*#__PURE__*/React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"circular\"`. */\n    circular: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: chainPropTypes(PropTypes.object, function (props) {\n    var classes = props.classes;\n\n    if (classes == null) {\n      return null;\n    }\n\n    if (classes.circle != null && // 2 classnames? one from withStyles the other must be custom\n    classes.circle.split(' ').length > 1) {\n      throw new Error(\"Material-UI: The `circle` class was deprecated. Use `circular` instead.\");\n    }\n\n    return null;\n  }),\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['circle', 'circular', 'rounded', 'square']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'circle') {\n      throw new Error('Material-UI: `variant=\"circle\"` was deprecated. Use `variant=\"circular\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Avatar,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Grid,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  ListItemSecondaryAction,\r\n} from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\nimport {\r\n  Delete as DeleteIcon,\r\n  Edit as EditIcon\r\n} from '@material-ui/icons'\r\nimport { PaperContainer, H5, Button, H3, Snackbar } from 'ui'\r\nimport { useDatabase } from 'hooks'\r\nimport { Link } from 'react-router-dom'\r\nimport { ADMIN_PROFESSIONALS_UPDATE, ADMIN_PROFESSIONALS_ADD } from 'routes'\r\nfunction ProfessionalsList () {\r\n  const [professionals, setProfessionals] = useState(() => [])\r\n  const { professionals: fetchedProfessionals, fetchProfessionals, deleteProfessional } = useDatabase()\r\n  const [selectedProfessional, setSelectedProfessional] = useState(() => { })\r\n\r\n  useEffect(() => {\r\n    fetchProfessionals()\r\n    console.log(\"fetchProfessionals\");\r\n  }, [])\r\n\r\n  const [snackBar, setSnackBar] = useState(() => ({\r\n    open: false,\r\n    success: false,\r\n    message: ''\r\n  }))\r\n\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n  const handleDialogOpen = (professional) => (e) => {\r\n    setDialogOpen(true);\r\n    setSelectedProfessional(professional)\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setDialogOpen(false);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (fetchedProfessionals) {\r\n      setProfessionals([\r\n        ...Object.keys(fetchedProfessionals)\r\n          .map((key) => ({\r\n            id: key,\r\n            ...fetchedProfessionals[key]\r\n          }))\r\n      ])\r\n      // console.log(\"profisionais\", professionals);\r\n    }\r\n\r\n  }, [fetchedProfessionals])\r\n\r\n  useEffect(() => {\r\n    // console.log(\"professionals restantes\", professionals)\r\n\r\n  })\r\n\r\n  const handleDelete = async (e) => {\r\n    const result = await deleteProfessional(selectedProfessional)\r\n    if (result.success) {\r\n      setProfessionals(() =>\r\n        professionals.filter((pro) => pro.id !== selectedProfessional.id)\r\n      )\r\n      setSnackBar({\r\n        open: true,\r\n        success: true,\r\n        message: result.message\r\n      })\r\n    } else {\r\n      setSnackBar({\r\n        open: true,\r\n        success: false,\r\n        message: result.message\r\n      })\r\n    }\r\n\r\n    setDialogOpen(false)\r\n  }\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setSnackBar({\r\n      open: false,\r\n      message: '',\r\n    })\r\n  }\r\n\r\n  return (\r\n    <PaperContainer>\r\n      <Grid container justify='center'>\r\n        <Grid item xs={12}>\r\n          <H5>Profissionais</H5>\r\n        </Grid>\r\n        <Grid item xs={11}>\r\n          <Grid\r\n            container\r\n            justify='flex-end'\r\n            direction='row'>\r\n            <Button\r\n              to={ADMIN_PROFESSIONALS_ADD}\r\n              variant='contained'\r\n              color='primary'>\r\n              Novo\r\n            </Button>\r\n          </Grid>\r\n\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {professionals.length == 0 && (<H5>Nenhum profissional encontrado</H5>)}\r\n          <List>\r\n            {professionals.map((professional) => (\r\n              <ListItem key={professional.id}>\r\n                <ListItemAvatar>\r\n                  <Avatar alt={professional.name.toUpperCase()} src={professional.photo} />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={professional.name}\r\n                  secondary={null}\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <IconButton onClick={handleDialogOpen(professional)}\r\n                    color='secondary'>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                  <IconButton\r\n                    to={{\r\n                      pathname: ADMIN_PROFESSIONALS_UPDATE,\r\n                      state: {\r\n                        professional\r\n                      }\r\n                    }}\r\n                    component={Link}\r\n                    color='secondary'>\r\n                    <EditIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Grid>\r\n        {/*  SNACKBAR  */}\r\n        <Snackbar\r\n          open={snackBar.open}\r\n          onClose={handleCloseSnackbar}\r\n          autoHideDuration={3000}\r\n          key={snackBar.message}>\r\n          <Alert variant='filled' severity={snackBar.success ? 'success' : 'error'}>\r\n            {snackBar.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        {/*  DIALOG  */}\r\n        <Dialog\r\n          open={dialogOpen}\r\n          onClose={handleDialogClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\">\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            Remover \"{!!selectedProfessional && selectedProfessional.name}\"?\r\n          </DialogTitle>\r\n\r\n          <DialogActions>\r\n            <Button onClick={handleDialogClose} color=\"secondary\">\r\n              Cancelar\r\n          </Button>\r\n            <Button onClick={handleDelete} color=\"secondary\" autoFocus>\r\n              OK\r\n          </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Grid>\r\n    </PaperContainer>\r\n\r\n  )\r\n}\r\n\r\n\r\nexport default ProfessionalsList\r\n"],"sourceRoot":""}