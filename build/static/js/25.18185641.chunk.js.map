{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","pages/scheduling/scheduling.js"],"names":["Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","BigButton","styled","Link","theme","backgroundColor","palette","primary","main","MainContent","Content","spacing","MainTitle","H4","attrs","display","text","secondary","typography","subtitle2","fontFamily","fontWeight","lineHeight","letterSpacing","Grid","MaterialGrid","ButtonsContainer","Scheduling","MaterialCard","variant","useEffect","direction","container","item","xs","justify","to","SCHEDULE","RESERVATIONS"],"mappings":"yHAAA,0DAaIA,EAAoBC,cAAiB,SAAcC,EAAOC,GAC5D,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAgBJ,EAAMK,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAQC,YAAyBP,EAAO,CAAC,UAAW,YAAa,WAErE,OAAoBD,gBAAoBS,IAAOC,YAAS,CACtDN,UAAWO,YAAKR,EAAQS,KAAMR,GAC9BS,UAAWP,EAAS,EAAI,EACxBJ,IAAKA,GACJK,OA6BUO,gBA9CK,CAElBF,KAAM,CACJG,SAAU,WA2CoB,CAChCC,KAAM,WADOF,CAEZf,I,wKCpBGkB,EAAYC,YAAOC,IAAPD,CAAH,sUAEO,gBAAEE,EAAF,EAAEA,MAAOC,EAAT,EAASA,gBAAT,OAClBA,GAAoCD,EAAME,QAAQC,QAAQC,QAcxDC,EAAcP,YAAOQ,IAAPR,CAAH,u1BAGF,qBAAEE,MAAiBO,QAAQ,OAiBpCC,EAAYV,YAAOW,KAAIC,MAAM,CACjCC,QAAS,UADOb,CAAH,kLAGJ,qBAAGE,MAAkBE,QAAQU,KAAKC,aAC5B,qBAAGb,MAAkBc,WAAWC,UAAUC,cAC1C,qBAAGhB,MAAkBc,WAAWC,UAAUE,cAC1C,qBAAGjB,MAAkBc,WAAWC,UAAUG,cACvC,qBAAGlB,MAAkBc,WAAWC,UAAUI,iBAIxDC,EAAOtB,YAAOuB,IAAPvB,CAAH,kDAIJwB,EAAkBxB,YAAOuB,IAAPvB,CAAF,0HAiBPyB,GAVFzB,YAAO0B,KAAcd,MAAM,CACtCe,QAAS,YADE3B,CAAH,uJAIY,qBAAGG,mBACP,qBAAGD,MAAkBO,QAAQ,MA7F5B,WAMjB,OAJAmB,qBAAU,cAER,IAGA,cAACrB,EAAD,UACE,eAAC,EAAD,CACEsB,UAAU,SACVC,WAAS,EAACrB,QAAS,EAFrB,UAIE,cAAC,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACE,cAACtB,EAAD,mCAEF,cAAC,EAAD,CAAMqB,MAAI,EAACC,GAAI,GAAf,SACE,eAACR,EAAD,CACEK,UAAU,MACVC,WAAS,EACTG,QAAQ,SAHV,UAIE,cAAClC,EAAD,CAAWmC,GAAIC,IAAf,qBACA,cAACpC,EAAD,CAAWI,gBAAgB,UAAU+B,GAAIE,IAAzC","file":"static/js/25.18185641.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Grid as MaterialGrid, Card as MaterialCard } from '@material-ui/core'\r\nimport { CardLink, Content, H3, H4,H5, HeaderContent, Button } from 'ui'\r\nimport { SCHEDULE, RESERVATIONS } from 'routes'\r\nimport { Link } from 'react-router-dom'\r\nconst Scheduling = () => {\r\n  \r\n  useEffect(()=>{\r\n\r\n  },[])\r\n\r\n  return (\r\n    <MainContent>\r\n      <Grid\r\n        direction='column'\r\n        container spacing={6}\r\n      >\r\n        <Grid item xs={12}>\r\n          <MainTitle>Agendamento online</MainTitle>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ButtonsContainer\r\n            direction='row'\r\n            container\r\n            justify='center'>\r\n            <BigButton to={SCHEDULE}>Agendar</BigButton>\r\n            <BigButton backgroundColor='#34425a' to={RESERVATIONS}>Reservar</BigButton>\r\n          </ButtonsContainer>\r\n        </Grid>\r\n      </Grid>\r\n    </MainContent>\r\n  )\r\n}\r\n\r\nconst BigButton = styled(Link)`\r\n  align-items: center;\r\n  background-color: ${({theme, backgroundColor}) => \r\n    backgroundColor ? backgroundColor : theme.palette.primary.main};\r\n  border-radius: 8px;\r\n  color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 1.3rem;\r\n  height: 110px;\r\n  justify-content: center;\r\n  margin-right: 5px;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  width: 180px;\r\n`\r\n\r\nconst MainContent = styled(Content)`\r\ndisplay: flex;\r\nalign-content: space-around;\r\npadding-top: ${({theme}) => theme.spacing(15)}px;\r\nbackground: linear-gradient(rgba(254,254,254,0.3),rgba(254,254,254,0.3)),\r\n               url(https://cdn.pixabay.com/photo/2018/09/24/15/54/background-3700256_960_720.jpg);\r\n  /* Background image is centered vertically and horizontally at all times */\r\n  background-position: center center;\r\n  /* Background image doesn't tile */\r\n  background-repeat: no-repeat;\r\n  /* Background image is fixed in the viewport so that it doesn't move when \r\n     the content's height is greater than the image's height */\r\n  background-attachment: fixed;\r\n  /* This is what makes the background image rescale based\r\n     on the container's size */\r\n  background-size: cover;\r\n  /* Set a background color that will be displayed\r\n     while the background image is loading */\r\n`\r\n\r\nconst MainTitle = styled(H4).attrs({\r\n  display: 'noWrap'\r\n})`\r\n  color: ${({ theme }) => theme.palette.text.secondary};\r\n  font-family: ${({ theme }) => theme.typography.subtitle2.fontFamily};\r\n  font-weight: ${({ theme }) => theme.typography.subtitle2.fontWeight};\r\n  line-height: ${({ theme }) => theme.typography.subtitle2.lineHeight};\r\n  letter-spacing: ${({ theme }) => theme.typography.subtitle2.letterSpacing};\r\n  text-shadow: rgba(0, 0, 0, 0.4) 0px 1px 1px;\r\n`\r\n\r\nconst Grid = styled(MaterialGrid)`\r\n  flex-wrap: nowrap;\r\n`\r\n\r\nconst ButtonsContainer =styled(MaterialGrid)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n  flex-wrap: nowrap;\r\n`\r\n\r\nconst Card = styled(MaterialCard).attrs({\r\n  variant: 'outlined',\r\n})`\r\n  box-shadow: 2px 2px 2px 2px rgba(0, 0, 0, 0.2);\r\n  background-color: ${({ backgroundColor }) => backgroundColor}; \r\n  margin-right: ${({ theme }) => theme.spacing(1)}px;\r\n  min-width: 180px;\r\n`\r\n\r\n\r\nexport default Scheduling"],"sourceRoot":""}